name: Deploy to AWS EC2

on:
    push:
        branches: ["main"]
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Install node.js
              uses: actions/setup-node@v4
              with:
                node-version: 21.7.1
            - name: Install dependencies
              run: npm install
            - name: Build
              run: npm run build
    
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v4
            - name: Install node.js
              uses: actions/setup-node@v4
              with:
                node-version: 21.7.1
            - name: Install dependencies
              run: npm install
            - name: Build
              run : npm run build
            - name: Configure SSH
              env:
                SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
              run: |
                mkdir -p ~/.ssh
                echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa
                ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
            - name: Deploy to EC2
              env:
                EC2_HOST: ${{ secrets.EC2_HOST }}
                EC2_USER: ${{ secrets.EC2_USER }}
                ENV_CONTENT: ${{ secrets.ENV_FILE }}
              run: |
                # Create deployment directory
                ssh $EC2_USER@$EC2_HOST "mkdir -p ~/app"

                # Copy files to EC2 instance
                rsync -avz \
                  --exclude='.git' \
                  --exclude='node_modules' \
                  --exclude='.github' \
                  . $EC2_USER@$EC2_HOST:~/app/

                # Copy environment variables
                ssh $EC2_USER@$EC2_HOST "echo \"$ENV_CONTENT\" > ~/app/.env"

                ssh $EC2_USER@$EC2_HOST "
                  export PATH=$PATH:/run/user/1000/fnm_multishells/20608_1755685199074/bin

                  # go to app
                  cd ~/app

                  # install production dependencies
                  npm ci --omit=dev

                  # restart app with pm2
                  pm2 delete nodejs-app || true
                  pm2 start dist/server.js --name nodejs-app
                  pm2 save || true
                "
